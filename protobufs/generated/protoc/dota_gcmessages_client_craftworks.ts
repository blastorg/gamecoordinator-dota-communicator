// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.1
//   protoc               v5.26.1
// source: dota_gcmessages_client_craftworks.proto

/* eslint-disable */
import Long from "long";
import _m0 from "protobufjs/minimal";
import { CMsgDOTAClaimEventActionResponse } from "./dota_gcmessages_common";
import { CMsgCraftworksComponents } from "./dota_gcmessages_common_craftworks";

export interface CMsgCraftworksUserData {
  componentInventory?: CMsgCraftworksComponents | undefined;
}

export interface CMsgClientToGCCraftworksGetUserData {
  craftworksId?: number | undefined;
}

export interface CMsgClientToGCCraftworksGetUserDataResponse {
  response?: CMsgClientToGCCraftworksGetUserDataResponse_EResponse | undefined;
  userData?: CMsgCraftworksUserData | undefined;
}

export enum CMsgClientToGCCraftworksGetUserDataResponse_EResponse {
  k_eInternalError = 0,
  k_eSuccess = 1,
  k_eTooBusy = 2,
  k_eDisabled = 3,
  k_eTimeout = 4,
  k_eInvalidCraftworks = 5,
  k_eExpiredCraftworks = 6,
}

export function cMsgClientToGCCraftworksGetUserDataResponse_EResponseFromJSON(
  object: any,
): CMsgClientToGCCraftworksGetUserDataResponse_EResponse {
  switch (object) {
    case 0:
    case "k_eInternalError":
      return CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eInternalError;
    case 1:
    case "k_eSuccess":
      return CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eSuccess;
    case 2:
    case "k_eTooBusy":
      return CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eTooBusy;
    case 3:
    case "k_eDisabled":
      return CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eDisabled;
    case 4:
    case "k_eTimeout":
      return CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eTimeout;
    case 5:
    case "k_eInvalidCraftworks":
      return CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eInvalidCraftworks;
    case 6:
    case "k_eExpiredCraftworks":
      return CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eExpiredCraftworks;
    default:
      throw new globalThis.Error(
        "Unrecognized enum value " + object + " for enum CMsgClientToGCCraftworksGetUserDataResponse_EResponse",
      );
  }
}

export function cMsgClientToGCCraftworksGetUserDataResponse_EResponseToJSON(
  object: CMsgClientToGCCraftworksGetUserDataResponse_EResponse,
): string {
  switch (object) {
    case CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eInternalError:
      return "k_eInternalError";
    case CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eSuccess:
      return "k_eSuccess";
    case CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eTooBusy:
      return "k_eTooBusy";
    case CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eDisabled:
      return "k_eDisabled";
    case CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eTimeout:
      return "k_eTimeout";
    case CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eInvalidCraftworks:
      return "k_eInvalidCraftworks";
    case CMsgClientToGCCraftworksGetUserDataResponse_EResponse.k_eExpiredCraftworks:
      return "k_eExpiredCraftworks";
    default:
      throw new globalThis.Error(
        "Unrecognized enum value " + object + " for enum CMsgClientToGCCraftworksGetUserDataResponse_EResponse",
      );
  }
}

export interface CMsgGCToClientCraftworksUserDataUpdated {
  craftworksId?: number | undefined;
  userData?: CMsgCraftworksUserData | undefined;
}

export interface CMsgClientToGCCraftworksCraftRecipe {
  craftworksId?: number | undefined;
  recipeId?: string | undefined;
}

export interface CMsgClientToGCCraftworksCraftRecipeResponse {
  response?: CMsgClientToGCCraftworksCraftRecipeResponse_EResponse | undefined;
  claimResponse?: CMsgDOTAClaimEventActionResponse | undefined;
}

export enum CMsgClientToGCCraftworksCraftRecipeResponse_EResponse {
  k_eInternalError = 0,
  k_eSuccess = 1,
  k_eTooBusy = 2,
  k_eDisabled = 3,
  k_eTimeout = 4,
  k_eInvalidCraftworks = 5,
  k_eExpiredCraftworks = 6,
  k_eNotEnoughComponents = 7,
  k_eInvalidRecipe = 8,
  k_eRecipeTierLocked = 9,
  k_eAlreadyCraftedMaxAmount = 10,
}

export function cMsgClientToGCCraftworksCraftRecipeResponse_EResponseFromJSON(
  object: any,
): CMsgClientToGCCraftworksCraftRecipeResponse_EResponse {
  switch (object) {
    case 0:
    case "k_eInternalError":
      return CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eInternalError;
    case 1:
    case "k_eSuccess":
      return CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eSuccess;
    case 2:
    case "k_eTooBusy":
      return CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eTooBusy;
    case 3:
    case "k_eDisabled":
      return CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eDisabled;
    case 4:
    case "k_eTimeout":
      return CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eTimeout;
    case 5:
    case "k_eInvalidCraftworks":
      return CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eInvalidCraftworks;
    case 6:
    case "k_eExpiredCraftworks":
      return CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eExpiredCraftworks;
    case 7:
    case "k_eNotEnoughComponents":
      return CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eNotEnoughComponents;
    case 8:
    case "k_eInvalidRecipe":
      return CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eInvalidRecipe;
    case 9:
    case "k_eRecipeTierLocked":
      return CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eRecipeTierLocked;
    case 10:
    case "k_eAlreadyCraftedMaxAmount":
      return CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eAlreadyCraftedMaxAmount;
    default:
      throw new globalThis.Error(
        "Unrecognized enum value " + object + " for enum CMsgClientToGCCraftworksCraftRecipeResponse_EResponse",
      );
  }
}

export function cMsgClientToGCCraftworksCraftRecipeResponse_EResponseToJSON(
  object: CMsgClientToGCCraftworksCraftRecipeResponse_EResponse,
): string {
  switch (object) {
    case CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eInternalError:
      return "k_eInternalError";
    case CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eSuccess:
      return "k_eSuccess";
    case CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eTooBusy:
      return "k_eTooBusy";
    case CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eDisabled:
      return "k_eDisabled";
    case CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eTimeout:
      return "k_eTimeout";
    case CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eInvalidCraftworks:
      return "k_eInvalidCraftworks";
    case CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eExpiredCraftworks:
      return "k_eExpiredCraftworks";
    case CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eNotEnoughComponents:
      return "k_eNotEnoughComponents";
    case CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eInvalidRecipe:
      return "k_eInvalidRecipe";
    case CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eRecipeTierLocked:
      return "k_eRecipeTierLocked";
    case CMsgClientToGCCraftworksCraftRecipeResponse_EResponse.k_eAlreadyCraftedMaxAmount:
      return "k_eAlreadyCraftedMaxAmount";
    default:
      throw new globalThis.Error(
        "Unrecognized enum value " + object + " for enum CMsgClientToGCCraftworksCraftRecipeResponse_EResponse",
      );
  }
}

export interface CMsgClientToGCCraftworksDevModifyComponents {
  craftworksId?: number | undefined;
  components?: CMsgCraftworksComponents | undefined;
  operation?: CMsgClientToGCCraftworksDevModifyComponents_EOperation | undefined;
}

export enum CMsgClientToGCCraftworksDevModifyComponents_EOperation {
  k_eAddComponents = 1,
  k_eSubtractComponents = 2,
}

export function cMsgClientToGCCraftworksDevModifyComponents_EOperationFromJSON(
  object: any,
): CMsgClientToGCCraftworksDevModifyComponents_EOperation {
  switch (object) {
    case 1:
    case "k_eAddComponents":
      return CMsgClientToGCCraftworksDevModifyComponents_EOperation.k_eAddComponents;
    case 2:
    case "k_eSubtractComponents":
      return CMsgClientToGCCraftworksDevModifyComponents_EOperation.k_eSubtractComponents;
    default:
      throw new globalThis.Error(
        "Unrecognized enum value " + object + " for enum CMsgClientToGCCraftworksDevModifyComponents_EOperation",
      );
  }
}

export function cMsgClientToGCCraftworksDevModifyComponents_EOperationToJSON(
  object: CMsgClientToGCCraftworksDevModifyComponents_EOperation,
): string {
  switch (object) {
    case CMsgClientToGCCraftworksDevModifyComponents_EOperation.k_eAddComponents:
      return "k_eAddComponents";
    case CMsgClientToGCCraftworksDevModifyComponents_EOperation.k_eSubtractComponents:
      return "k_eSubtractComponents";
    default:
      throw new globalThis.Error(
        "Unrecognized enum value " + object + " for enum CMsgClientToGCCraftworksDevModifyComponents_EOperation",
      );
  }
}

export interface CMsgClientToGCCraftworksDevModifyComponentsResponse {
  response?: CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse | undefined;
}

export enum CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse {
  k_eInternalError = 0,
  k_eSuccess = 1,
  k_eTooBusy = 2,
  k_eDisabled = 3,
  k_eTimeout = 4,
  k_eInvalidCraftworks = 5,
  k_eNotAllowed = 6,
}

export function cMsgClientToGCCraftworksDevModifyComponentsResponse_EResponseFromJSON(
  object: any,
): CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse {
  switch (object) {
    case 0:
    case "k_eInternalError":
      return CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eInternalError;
    case 1:
    case "k_eSuccess":
      return CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eSuccess;
    case 2:
    case "k_eTooBusy":
      return CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eTooBusy;
    case 3:
    case "k_eDisabled":
      return CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eDisabled;
    case 4:
    case "k_eTimeout":
      return CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eTimeout;
    case 5:
    case "k_eInvalidCraftworks":
      return CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eInvalidCraftworks;
    case 6:
    case "k_eNotAllowed":
      return CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eNotAllowed;
    default:
      throw new globalThis.Error(
        "Unrecognized enum value " + object + " for enum CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse",
      );
  }
}

export function cMsgClientToGCCraftworksDevModifyComponentsResponse_EResponseToJSON(
  object: CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse,
): string {
  switch (object) {
    case CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eInternalError:
      return "k_eInternalError";
    case CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eSuccess:
      return "k_eSuccess";
    case CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eTooBusy:
      return "k_eTooBusy";
    case CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eDisabled:
      return "k_eDisabled";
    case CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eTimeout:
      return "k_eTimeout";
    case CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eInvalidCraftworks:
      return "k_eInvalidCraftworks";
    case CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse.k_eNotAllowed:
      return "k_eNotAllowed";
    default:
      throw new globalThis.Error(
        "Unrecognized enum value " + object + " for enum CMsgClientToGCCraftworksDevModifyComponentsResponse_EResponse",
      );
  }
}

function createBaseCMsgCraftworksUserData(): CMsgCraftworksUserData {
  return { componentInventory: undefined };
}

export const CMsgCraftworksUserData = {
  encode(message: CMsgCraftworksUserData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.componentInventory !== undefined) {
      CMsgCraftworksComponents.encode(message.componentInventory, writer.uint32(10).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): CMsgCraftworksUserData {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCMsgCraftworksUserData();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.componentInventory = CMsgCraftworksComponents.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CMsgCraftworksUserData {
    return {
      componentInventory: isSet(object.componentInventory)
        ? CMsgCraftworksComponents.fromJSON(object.componentInventory)
        : undefined,
    };
  },

  toJSON(message: CMsgCraftworksUserData): unknown {
    const obj: any = {};
    if (message.componentInventory !== undefined) {
      obj.componentInventory = CMsgCraftworksComponents.toJSON(message.componentInventory);
    }
    return obj;
  },

  create(base?: DeepPartial<CMsgCraftworksUserData>): CMsgCraftworksUserData {
    return CMsgCraftworksUserData.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CMsgCraftworksUserData>): CMsgCraftworksUserData {
    const message = createBaseCMsgCraftworksUserData();
    message.componentInventory = (object.componentInventory !== undefined && object.componentInventory !== null)
      ? CMsgCraftworksComponents.fromPartial(object.componentInventory)
      : undefined;
    return message;
  },
};

function createBaseCMsgClientToGCCraftworksGetUserData(): CMsgClientToGCCraftworksGetUserData {
  return { craftworksId: 0 };
}

export const CMsgClientToGCCraftworksGetUserData = {
  encode(message: CMsgClientToGCCraftworksGetUserData, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.craftworksId !== undefined && message.craftworksId !== 0) {
      writer.uint32(8).uint32(message.craftworksId);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): CMsgClientToGCCraftworksGetUserData {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCMsgClientToGCCraftworksGetUserData();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.craftworksId = reader.uint32();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CMsgClientToGCCraftworksGetUserData {
    return { craftworksId: isSet(object.craftworksId) ? globalThis.Number(object.craftworksId) : 0 };
  },

  toJSON(message: CMsgClientToGCCraftworksGetUserData): unknown {
    const obj: any = {};
    if (message.craftworksId !== undefined && message.craftworksId !== 0) {
      obj.craftworksId = Math.round(message.craftworksId);
    }
    return obj;
  },

  create(base?: DeepPartial<CMsgClientToGCCraftworksGetUserData>): CMsgClientToGCCraftworksGetUserData {
    return CMsgClientToGCCraftworksGetUserData.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CMsgClientToGCCraftworksGetUserData>): CMsgClientToGCCraftworksGetUserData {
    const message = createBaseCMsgClientToGCCraftworksGetUserData();
    message.craftworksId = object.craftworksId ?? 0;
    return message;
  },
};

function createBaseCMsgClientToGCCraftworksGetUserDataResponse(): CMsgClientToGCCraftworksGetUserDataResponse {
  return { response: 0, userData: undefined };
}

export const CMsgClientToGCCraftworksGetUserDataResponse = {
  encode(message: CMsgClientToGCCraftworksGetUserDataResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.response !== undefined && message.response !== 0) {
      writer.uint32(8).int32(message.response);
    }
    if (message.userData !== undefined) {
      CMsgCraftworksUserData.encode(message.userData, writer.uint32(18).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): CMsgClientToGCCraftworksGetUserDataResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCMsgClientToGCCraftworksGetUserDataResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.response = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.userData = CMsgCraftworksUserData.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CMsgClientToGCCraftworksGetUserDataResponse {
    return {
      response: isSet(object.response)
        ? cMsgClientToGCCraftworksGetUserDataResponse_EResponseFromJSON(object.response)
        : 0,
      userData: isSet(object.userData) ? CMsgCraftworksUserData.fromJSON(object.userData) : undefined,
    };
  },

  toJSON(message: CMsgClientToGCCraftworksGetUserDataResponse): unknown {
    const obj: any = {};
    if (message.response !== undefined && message.response !== 0) {
      obj.response = cMsgClientToGCCraftworksGetUserDataResponse_EResponseToJSON(message.response);
    }
    if (message.userData !== undefined) {
      obj.userData = CMsgCraftworksUserData.toJSON(message.userData);
    }
    return obj;
  },

  create(base?: DeepPartial<CMsgClientToGCCraftworksGetUserDataResponse>): CMsgClientToGCCraftworksGetUserDataResponse {
    return CMsgClientToGCCraftworksGetUserDataResponse.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<CMsgClientToGCCraftworksGetUserDataResponse>,
  ): CMsgClientToGCCraftworksGetUserDataResponse {
    const message = createBaseCMsgClientToGCCraftworksGetUserDataResponse();
    message.response = object.response ?? 0;
    message.userData = (object.userData !== undefined && object.userData !== null)
      ? CMsgCraftworksUserData.fromPartial(object.userData)
      : undefined;
    return message;
  },
};

function createBaseCMsgGCToClientCraftworksUserDataUpdated(): CMsgGCToClientCraftworksUserDataUpdated {
  return { craftworksId: 0, userData: undefined };
}

export const CMsgGCToClientCraftworksUserDataUpdated = {
  encode(message: CMsgGCToClientCraftworksUserDataUpdated, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.craftworksId !== undefined && message.craftworksId !== 0) {
      writer.uint32(8).uint32(message.craftworksId);
    }
    if (message.userData !== undefined) {
      CMsgCraftworksUserData.encode(message.userData, writer.uint32(18).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): CMsgGCToClientCraftworksUserDataUpdated {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCMsgGCToClientCraftworksUserDataUpdated();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.craftworksId = reader.uint32();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.userData = CMsgCraftworksUserData.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CMsgGCToClientCraftworksUserDataUpdated {
    return {
      craftworksId: isSet(object.craftworksId) ? globalThis.Number(object.craftworksId) : 0,
      userData: isSet(object.userData) ? CMsgCraftworksUserData.fromJSON(object.userData) : undefined,
    };
  },

  toJSON(message: CMsgGCToClientCraftworksUserDataUpdated): unknown {
    const obj: any = {};
    if (message.craftworksId !== undefined && message.craftworksId !== 0) {
      obj.craftworksId = Math.round(message.craftworksId);
    }
    if (message.userData !== undefined) {
      obj.userData = CMsgCraftworksUserData.toJSON(message.userData);
    }
    return obj;
  },

  create(base?: DeepPartial<CMsgGCToClientCraftworksUserDataUpdated>): CMsgGCToClientCraftworksUserDataUpdated {
    return CMsgGCToClientCraftworksUserDataUpdated.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CMsgGCToClientCraftworksUserDataUpdated>): CMsgGCToClientCraftworksUserDataUpdated {
    const message = createBaseCMsgGCToClientCraftworksUserDataUpdated();
    message.craftworksId = object.craftworksId ?? 0;
    message.userData = (object.userData !== undefined && object.userData !== null)
      ? CMsgCraftworksUserData.fromPartial(object.userData)
      : undefined;
    return message;
  },
};

function createBaseCMsgClientToGCCraftworksCraftRecipe(): CMsgClientToGCCraftworksCraftRecipe {
  return { craftworksId: 0, recipeId: "0" };
}

export const CMsgClientToGCCraftworksCraftRecipe = {
  encode(message: CMsgClientToGCCraftworksCraftRecipe, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.craftworksId !== undefined && message.craftworksId !== 0) {
      writer.uint32(8).uint32(message.craftworksId);
    }
    if (message.recipeId !== undefined && message.recipeId !== "0") {
      writer.uint32(16).uint64(message.recipeId);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): CMsgClientToGCCraftworksCraftRecipe {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCMsgClientToGCCraftworksCraftRecipe();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.craftworksId = reader.uint32();
          continue;
        case 2:
          if (tag !== 16) {
            break;
          }

          message.recipeId = longToString(reader.uint64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CMsgClientToGCCraftworksCraftRecipe {
    return {
      craftworksId: isSet(object.craftworksId) ? globalThis.Number(object.craftworksId) : 0,
      recipeId: isSet(object.recipeId) ? globalThis.String(object.recipeId) : "0",
    };
  },

  toJSON(message: CMsgClientToGCCraftworksCraftRecipe): unknown {
    const obj: any = {};
    if (message.craftworksId !== undefined && message.craftworksId !== 0) {
      obj.craftworksId = Math.round(message.craftworksId);
    }
    if (message.recipeId !== undefined && message.recipeId !== "0") {
      obj.recipeId = message.recipeId;
    }
    return obj;
  },

  create(base?: DeepPartial<CMsgClientToGCCraftworksCraftRecipe>): CMsgClientToGCCraftworksCraftRecipe {
    return CMsgClientToGCCraftworksCraftRecipe.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<CMsgClientToGCCraftworksCraftRecipe>): CMsgClientToGCCraftworksCraftRecipe {
    const message = createBaseCMsgClientToGCCraftworksCraftRecipe();
    message.craftworksId = object.craftworksId ?? 0;
    message.recipeId = object.recipeId ?? "0";
    return message;
  },
};

function createBaseCMsgClientToGCCraftworksCraftRecipeResponse(): CMsgClientToGCCraftworksCraftRecipeResponse {
  return { response: 0, claimResponse: undefined };
}

export const CMsgClientToGCCraftworksCraftRecipeResponse = {
  encode(message: CMsgClientToGCCraftworksCraftRecipeResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.response !== undefined && message.response !== 0) {
      writer.uint32(8).int32(message.response);
    }
    if (message.claimResponse !== undefined) {
      CMsgDOTAClaimEventActionResponse.encode(message.claimResponse, writer.uint32(18).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): CMsgClientToGCCraftworksCraftRecipeResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCMsgClientToGCCraftworksCraftRecipeResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.response = reader.int32() as any;
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.claimResponse = CMsgDOTAClaimEventActionResponse.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CMsgClientToGCCraftworksCraftRecipeResponse {
    return {
      response: isSet(object.response)
        ? cMsgClientToGCCraftworksCraftRecipeResponse_EResponseFromJSON(object.response)
        : 0,
      claimResponse: isSet(object.claimResponse)
        ? CMsgDOTAClaimEventActionResponse.fromJSON(object.claimResponse)
        : undefined,
    };
  },

  toJSON(message: CMsgClientToGCCraftworksCraftRecipeResponse): unknown {
    const obj: any = {};
    if (message.response !== undefined && message.response !== 0) {
      obj.response = cMsgClientToGCCraftworksCraftRecipeResponse_EResponseToJSON(message.response);
    }
    if (message.claimResponse !== undefined) {
      obj.claimResponse = CMsgDOTAClaimEventActionResponse.toJSON(message.claimResponse);
    }
    return obj;
  },

  create(base?: DeepPartial<CMsgClientToGCCraftworksCraftRecipeResponse>): CMsgClientToGCCraftworksCraftRecipeResponse {
    return CMsgClientToGCCraftworksCraftRecipeResponse.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<CMsgClientToGCCraftworksCraftRecipeResponse>,
  ): CMsgClientToGCCraftworksCraftRecipeResponse {
    const message = createBaseCMsgClientToGCCraftworksCraftRecipeResponse();
    message.response = object.response ?? 0;
    message.claimResponse = (object.claimResponse !== undefined && object.claimResponse !== null)
      ? CMsgDOTAClaimEventActionResponse.fromPartial(object.claimResponse)
      : undefined;
    return message;
  },
};

function createBaseCMsgClientToGCCraftworksDevModifyComponents(): CMsgClientToGCCraftworksDevModifyComponents {
  return { craftworksId: 0, components: undefined, operation: 1 };
}

export const CMsgClientToGCCraftworksDevModifyComponents = {
  encode(message: CMsgClientToGCCraftworksDevModifyComponents, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.craftworksId !== undefined && message.craftworksId !== 0) {
      writer.uint32(8).uint32(message.craftworksId);
    }
    if (message.components !== undefined) {
      CMsgCraftworksComponents.encode(message.components, writer.uint32(18).fork()).ldelim();
    }
    if (message.operation !== undefined && message.operation !== 1) {
      writer.uint32(24).int32(message.operation);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): CMsgClientToGCCraftworksDevModifyComponents {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCMsgClientToGCCraftworksDevModifyComponents();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.craftworksId = reader.uint32();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.components = CMsgCraftworksComponents.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.operation = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CMsgClientToGCCraftworksDevModifyComponents {
    return {
      craftworksId: isSet(object.craftworksId) ? globalThis.Number(object.craftworksId) : 0,
      components: isSet(object.components) ? CMsgCraftworksComponents.fromJSON(object.components) : undefined,
      operation: isSet(object.operation)
        ? cMsgClientToGCCraftworksDevModifyComponents_EOperationFromJSON(object.operation)
        : 1,
    };
  },

  toJSON(message: CMsgClientToGCCraftworksDevModifyComponents): unknown {
    const obj: any = {};
    if (message.craftworksId !== undefined && message.craftworksId !== 0) {
      obj.craftworksId = Math.round(message.craftworksId);
    }
    if (message.components !== undefined) {
      obj.components = CMsgCraftworksComponents.toJSON(message.components);
    }
    if (message.operation !== undefined && message.operation !== 1) {
      obj.operation = cMsgClientToGCCraftworksDevModifyComponents_EOperationToJSON(message.operation);
    }
    return obj;
  },

  create(base?: DeepPartial<CMsgClientToGCCraftworksDevModifyComponents>): CMsgClientToGCCraftworksDevModifyComponents {
    return CMsgClientToGCCraftworksDevModifyComponents.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<CMsgClientToGCCraftworksDevModifyComponents>,
  ): CMsgClientToGCCraftworksDevModifyComponents {
    const message = createBaseCMsgClientToGCCraftworksDevModifyComponents();
    message.craftworksId = object.craftworksId ?? 0;
    message.components = (object.components !== undefined && object.components !== null)
      ? CMsgCraftworksComponents.fromPartial(object.components)
      : undefined;
    message.operation = object.operation ?? 1;
    return message;
  },
};

function createBaseCMsgClientToGCCraftworksDevModifyComponentsResponse(): CMsgClientToGCCraftworksDevModifyComponentsResponse {
  return { response: 0 };
}

export const CMsgClientToGCCraftworksDevModifyComponentsResponse = {
  encode(
    message: CMsgClientToGCCraftworksDevModifyComponentsResponse,
    writer: _m0.Writer = _m0.Writer.create(),
  ): _m0.Writer {
    if (message.response !== undefined && message.response !== 0) {
      writer.uint32(8).int32(message.response);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): CMsgClientToGCCraftworksDevModifyComponentsResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseCMsgClientToGCCraftworksDevModifyComponentsResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.response = reader.int32() as any;
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): CMsgClientToGCCraftworksDevModifyComponentsResponse {
    return {
      response: isSet(object.response)
        ? cMsgClientToGCCraftworksDevModifyComponentsResponse_EResponseFromJSON(object.response)
        : 0,
    };
  },

  toJSON(message: CMsgClientToGCCraftworksDevModifyComponentsResponse): unknown {
    const obj: any = {};
    if (message.response !== undefined && message.response !== 0) {
      obj.response = cMsgClientToGCCraftworksDevModifyComponentsResponse_EResponseToJSON(message.response);
    }
    return obj;
  },

  create(
    base?: DeepPartial<CMsgClientToGCCraftworksDevModifyComponentsResponse>,
  ): CMsgClientToGCCraftworksDevModifyComponentsResponse {
    return CMsgClientToGCCraftworksDevModifyComponentsResponse.fromPartial(base ?? {});
  },
  fromPartial(
    object: DeepPartial<CMsgClientToGCCraftworksDevModifyComponentsResponse>,
  ): CMsgClientToGCCraftworksDevModifyComponentsResponse {
    const message = createBaseCMsgClientToGCCraftworksDevModifyComponentsResponse();
    message.response = object.response ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function longToString(long: Long) {
  return long.toString();
}

if (_m0.util.Long !== Long) {
  _m0.util.Long = Long as any;
  _m0.configure();
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
